(** [Q] is short for Emacs [quote].  [Q] defines a constant symbols. *)

open! Core_kernel
open! Import

let abbrev_mode                      = "abbrev-mode"                      |> Symbol.intern
let ad_activate                      = "ad-activate"                      |> Symbol.intern
let ad_activate_all                  = "ad-activate-all"                  |> Symbol.intern
let ad_activate_regexp               = "ad-activate-regexp"               |> Symbol.intern
let ad_deactivate                    = "ad-deactivate"                    |> Symbol.intern
let ad_deactivate_all                = "ad-deactivate-all"                |> Symbol.intern
let ad_deactivate_regexp             = "ad-deactivate-regexp"             |> Symbol.intern
let ad_disable_advice                = "ad-disable-advice"                |> Symbol.intern
let ad_do_it                         = "ad-do-it"                         |> Symbol.intern
let ad_enable_advice                 = "ad-enable-advice"                 |> Symbol.intern
let ad_get_args                      = "ad-get-args"                      |> Symbol.intern
let ad_return_value                  = "ad-return-value"                  |> Symbol.intern
let ad_set_args                      = "ad-set-args"                      |> Symbol.intern
let ad_unadvise                      = "ad-unadvise"                      |> Symbol.intern
let ad_unadvise_all                  = "ad-unadvise-all"                  |> Symbol.intern
let add_hook                         = "add-hook"                         |> Symbol.intern
let add_text_properties              = "add-text-properties"              |> Symbol.intern
let after                            = "after"                            |> Symbol.intern
let after_load_functions             = "after-load-functions"             |> Symbol.intern
let after_save_hook                  = "after-save-hook"                  |> Symbol.intern
let alist                            = "alist"                            |> Symbol.intern
let alt                              = "alt"                              |> Symbol.intern
let ansi_color                       = "ansi-color"                       |> Symbol.intern
let ansi_color_apply_on_region       = "ansi-color-apply-on-region"       |> Symbol.intern
let ansi_color_bright_vector         = "ansi-color-bright-names-vector"   |> Symbol.intern
let ansi_color_face                  = "ansi-color-face"                  |> Symbol.intern
let ansi_color_faint_vector          = "ansi-color-faint-names-vector"    |> Symbol.intern
let ansi_color_map                   = "ansi-color-map"                   |> Symbol.intern
let ansi_color_names_vector          = "ansi-color-names-vector"          |> Symbol.intern
let append                           = "append"                           |> Symbol.intern
let apply                            = "apply"                            |> Symbol.intern
let aref                             = "aref"                             |> Symbol.intern
let around                           = "around"                           |> Symbol.intern
let aset                             = "aset"                             |> Symbol.intern
let auto_mode_alist                  = "auto-mode-alist"                  |> Symbol.intern
let autoload                         = "autoload"                         |> Symbol.intern
let background_color                 = "background-color"                 |> Symbol.intern
let backward_char                    = "backward-char"                    |> Symbol.intern
let backward_sexp                    = "backward-sexp"                    |> Symbol.intern
let backward_word                    = "backward-word"                    |> Symbol.intern
let before                           = "before"                           |> Symbol.intern
let beginning_of_line                = "beginning-of-line"                |> Symbol.intern
let bold                             = "bold"                             |> Symbol.intern
let boolean                          = "boolean"                          |> Symbol.intern
let boundp                           = "boundp"                           |> Symbol.intern
let buffer_disable_undo              = "buffer-disable-undo"              |> Symbol.intern
let buffer_enable_undo               = "buffer-enable-undo"               |> Symbol.intern
let buffer_file_name                 = "buffer-file-name"                 |> Symbol.intern
let buffer_list                      = "buffer-list"                      |> Symbol.intern
let buffer_live_p                    = "buffer-live-p"                    |> Symbol.intern
let buffer_local_value               = "buffer-local-value"               |> Symbol.intern
let buffer_local_variables           = "buffer-local-variables"           |> Symbol.intern
let buffer_modified_p                = "buffer-modified-p"                |> Symbol.intern
let buffer_name                      = "buffer-name"                      |> Symbol.intern
let buffer_read_only                 = "buffer-read-only"                 |> Symbol.intern
let buffer_size                      = "buffer-size"                      |> Symbol.intern
let buffer_string                    = "buffer-string"                    |> Symbol.intern
let buffer_substring                 = "buffer-substring"                 |> Symbol.intern
let buffer_substring_no_properties   = "buffer-substring-no-properties"   |> Symbol.intern
let buffer_undo_list                 = "buffer-undo-list"                 |> Symbol.intern
let bury_buffer                      = "bury-buffer"                      |> Symbol.intern
let byte_to_position                 = "byte-to-position"                 |> Symbol.intern
let call_interactively               = "call-interactively"               |> Symbol.intern
let call_process                     = "call-process"                     |> Symbol.intern
let cancel_timer                     = "cancel-timer"                     |> Symbol.intern
let cd                               = "cd"                               |> Symbol.intern
let char_syntax                      = "char-syntax"                      |> Symbol.intern
let character                        = "character"                        |> Symbol.intern
let characterp                       = "characterp"                       |> Symbol.intern
let choice                           = "choice"                           |> Symbol.intern
let click                            = "click"                            |> Symbol.intern
let coding_system                    = "coding-system"                    |> Symbol.intern
let color                            = "color"                            |> Symbol.intern
let color_defined_p                  = "color-defined-p"                  |> Symbol.intern
let color_gray_p                     = "color-gray-p"                     |> Symbol.intern
let color_supported_p                = "color-supported-p"                |> Symbol.intern
let color_values                     = "color-values"                     |> Symbol.intern
let comment_end                      = "comment-end"                      |> Symbol.intern
let comment_multi_line               = "comment-multi-line"               |> Symbol.intern
let comment_start                    = "comment-start"                    |> Symbol.intern
let compilation_buffer_name_function = "compilation-buffer-name-function" |> Symbol.intern
let concat                           = "concat"                           |> Symbol.intern
let condensed                        = "condensed"                        |> Symbol.intern
let cons                             = "cons"                             |> Symbol.intern
let const                            = "const"                            |> Symbol.intern
let control                          = "control"                          |> Symbol.intern
let copy_file                        = "copy-file"                        |> Symbol.intern
let copy_keymap                      = "copy-keymap"                      |> Symbol.intern
let copy_marker                      = "copy-marker"                      |> Symbol.intern
let copy_syntax_table                = "copy-syntax-table"                |> Symbol.intern
let current_buffer                   = "current-buffer"                   |> Symbol.intern
let current_column                   = "current-column"                   |> Symbol.intern
let current_global_map               = "current-global-map"               |> Symbol.intern
let current_local_map                = "current-local-map"                |> Symbol.intern
let current_minor_mode_maps          = "current-minor-mode-maps"          |> Symbol.intern
let current_prefix_arg               = "current-prefix-arg"               |> Symbol.intern
let deactivate_mark                  = "deactivate-mark"                  |> Symbol.intern
let defadvice                        = "defadvice"                        |> Symbol.intern
let default_boundp                   = "default-boundp"                   |> Symbol.intern
let default_directory                = "default-directory"                |> Symbol.intern
let default_value                    = "default-value"                    |> Symbol.intern
let defcustom                        = "defcustom"                        |> Symbol.intern
let defface                          = "defface"                          |> Symbol.intern
let define_derived_mode              = "define-derived-mode"              |> Symbol.intern
let define_error                     = "define-error"                     |> Symbol.intern
let define_key                       = "define-key"                       |> Symbol.intern
let defined_colors                   = "defined-colors"                   |> Symbol.intern
let defun                            = "defun"                            |> Symbol.intern
let defvar                           = "defvar"                           |> Symbol.intern
let delete_directory                 = "delete-directory"                 |> Symbol.intern
let delete_duplicate_lines           = "delete-duplicate-lines"           |> Symbol.intern
let delete_file                      = "delete-file"                      |> Symbol.intern
let delete_process                   = "delete-process"                   |> Symbol.intern
let delete_region                    = "delete-region"                    |> Symbol.intern
let delete_window                    = "delete-window"                    |> Symbol.intern
let directory                        = "directory"                        |> Symbol.intern
let directory_file_name              = "directory-file-name"              |> Symbol.intern
let directory_files                  = "directory-files"                  |> Symbol.intern
let directory_files_recursively      = "directory-files-recursively"      |> Symbol.intern
let display_buffer                   = "display-buffer"                   |> Symbol.intern
let double                           = "double"                           |> Symbol.intern
let down                             = "down"                             |> Symbol.intern
let drag                             = "drag"                             |> Symbol.intern
let ecaml_has_been_shutdown          = "ecaml-has-been-shutdown"          |> Symbol.intern
let elt                              = "elt"                              |> Symbol.intern
let enable_multibyte_characters      = "enable-multibyte-characters"      |> Symbol.intern
let end_                             = "end"                              |> Symbol.intern
let end_of_line                      = "end-of-line"                      |> Symbol.intern
let erase_buffer                     = "erase-buffer"                     |> Symbol.intern
let error                            = "error"                            |> Symbol.intern
let eval                             = "eval"                             |> Symbol.intern
let event_basic_type                 = "event-basic-type"                 |> Symbol.intern
let event_modifiers                  = "event-modifiers"                  |> Symbol.intern
let execute_kbd_macro                = "execute-kbd-macro"                |> Symbol.intern
let expand_file_name                 = "expand-file-name"                 |> Symbol.intern
let expanded                         = "expanded"                         |> Symbol.intern
let extra_bold                       = "extra-bold"                       |> Symbol.intern
let extra_condensed                  = "extra-condensed"                  |> Symbol.intern
let extra_expanded                   = "extra-expanded"                   |> Symbol.intern
let extra_light                      = "extra-light"                      |> Symbol.intern
let face                             = "face"                             |> Symbol.intern
let face_all_attributes              = "face-all-attributes"              |> Symbol.intern
let face_attribute                   = "face-attribute"                   |> Symbol.intern
let face_attribute_relative_p        = "face-attribute-relative-p"        |> Symbol.intern
let face_list                        = "face-list"                        |> Symbol.intern
let facep                            = "facep"                            |> Symbol.intern
let featurep                         = "featurep"                         |> Symbol.intern
let features                         = "features"                         |> Symbol.intern
let file                             = "file"                             |> Symbol.intern
let file_directory_p                 = "file-directory-p"                 |> Symbol.intern
let file_executable_p                = "file-executable-p"                |> Symbol.intern
let file_exists_p                    = "file-exists-p"                    |> Symbol.intern
let file_in_directory_p              = "file-in-directory-p"              |> Symbol.intern
let file_name_absolute_p             = "file-name-absolute-p"             |> Symbol.intern
let file_name_as_directory           = "file-name-as-directory"           |> Symbol.intern
let file_name_directory              = "file-name-directory"              |> Symbol.intern
let file_name_extension              = "file-name-extension"              |> Symbol.intern
let file_name_nondirectory           = "file-name-nondirectory"           |> Symbol.intern
let file_name_sans_extension         = "file-name-sans-extension"         |> Symbol.intern
let file_readable_p                  = "file-readable-p"                  |> Symbol.intern
let file_regular_p                   = "file-regular-p"                   |> Symbol.intern
let file_relative_name               = "file-relative-name"               |> Symbol.intern
let file_symlink_p                   = "file-symlink-p"                   |> Symbol.intern
let file_truename                    = "file-truename"                    |> Symbol.intern
let file_writable_p                  = "file-writable-p"                  |> Symbol.intern
let fill_column                      = "fill-column"                      |> Symbol.intern
let find_file                        = "find-file"                        |> Symbol.intern
let find_file_noselect               = "find-file-noselect"               |> Symbol.intern
let find_function                    = "find-function"                    |> Symbol.intern
let first                            = "first"                            |> Symbol.intern
let float                            = "float"                            |> Symbol.intern
let flush_lines                      = "flush-lines"                      |> Symbol.intern
let font_family_list                 = "font-family-list"                 |> Symbol.intern
let font_lock_face                   = "font-lock-face"                   |> Symbol.intern
let foreground_color                 = "foreground-color"                 |> Symbol.intern
let format                           = "format"                           |> Symbol.intern
let forward_char                     = "forward-char"                     |> Symbol.intern
let forward_line                     = "forward-line"                     |> Symbol.intern
let forward_sexp                     = "forward-sexp"                     |> Symbol.intern
let forward_word                     = "forward-word"                     |> Symbol.intern
let frame_height                     = "frame-height"                     |> Symbol.intern
let frame_list                       = "frame-list"                       |> Symbol.intern
let frame_parameters                 = "frame-parameters"                 |> Symbol.intern
let frame_pixel_height               = "frame-pixel-height"               |> Symbol.intern
let frame_pixel_width                = "frame-pixel-width"                |> Symbol.intern
let frame_width                      = "frame-width"                      |> Symbol.intern
let fset                             = "fset"                             |> Symbol.intern
let funcall                          = "funcall"                          |> Symbol.intern
let function_                        = "function"                         |> Symbol.intern
let fundamental_mode                 = "fundamental-mode"                 |> Symbol.intern
let generate_new_buffer              = "generate-new-buffer"              |> Symbol.intern
let gensym                           = "gensym"                           |> Symbol.intern
let get_buffer                       = "get-buffer"                       |> Symbol.intern
let get_buffer_create                = "get-buffer-create"                |> Symbol.intern
let get_buffer_process               = "get-buffer-process"               |> Symbol.intern
let get_buffer_window_list           = "get-buffer-window-list"           |> Symbol.intern
let get_text_property                = "get-text-property"                |> Symbol.intern
let getenv                           = "getenv"                           |> Symbol.intern
let goto_char                        = "goto-char"                        |> Symbol.intern
let grep                             = "grep"                             |> Symbol.intern
let grep_use_null_device             = "grep-use-null-device"             |> Symbol.intern
let group                            = "group"                            |> Symbol.intern
let group_gid                        = "group-gid"                        |> Symbol.intern
let group_real_gid                   = "group-real-gid"                   |> Symbol.intern
let hook                             = "hook"                             |> Symbol.intern
let hyper                            = "hyper"                            |> Symbol.intern
let ignore_auto                      = "ignore-auto"                      |> Symbol.intern
let indent_region                    = "indent-region"                    |> Symbol.intern
let inhibit_message                  = "inhibit-message"                  |> Symbol.intern
let inhibit_read_only                = "inhibit-read-only"                |> Symbol.intern
let insert                           = "insert"                           |> Symbol.intern
let insert_file_contents             = "insert-file-contents"             |> Symbol.intern
let integer                          = "integer"                          |> Symbol.intern
let interactive                      = "interactive"                      |> Symbol.intern
let italic                           = "italic"                           |> Symbol.intern
let kbd                              = "kbd"                              |> Symbol.intern
let key_description                  = "key-description"                  |> Symbol.intern
let keymap_parent                    = "keymap-parent"                    |> Symbol.intern
let kill_all_local_variables         = "kill-all-local-variables"         |> Symbol.intern
let kill_buffer                      = "kill-buffer"                      |> Symbol.intern
let kill_buffer_hook                 = "kill-buffer-hook"                 |> Symbol.intern
let kill_emacs                       = "kill-emacs"                       |> Symbol.intern
let kill_local_variable              = "kill-local-variable"              |> Symbol.intern
let kill_region                      = "kill-region"                      |> Symbol.intern
let kill_word                        = "kill-word"                        |> Symbol.intern
let lambda                           = "lambda"                           |> Symbol.intern
let last                             = "last"                             |> Symbol.intern
let length                           = "length"                           |> Symbol.intern
let let_                             = "let"                              |> Symbol.intern
let light                            = "light"                            |> Symbol.intern
let line_number_at_pos               = "line-number-at-pos"               |> Symbol.intern
let list                             = "list"                             |> Symbol.intern
let listify_key_sequence             = "listify-key-sequence"             |> Symbol.intern
let load                             = "load"                             |> Symbol.intern
let load_history                     = "load-history"                     |> Symbol.intern
let load_path                        = "load-path"                        |> Symbol.intern
let local                            = "local"                            |> Symbol.intern
let local_variable_if_set_p          = "local-variable-if-set-p"          |> Symbol.intern
let local_variable_p                 = "local-variable-p"                 |> Symbol.intern
let locate_dominating_file           = "locate-dominating-file"           |> Symbol.intern
let looking_at                       = "looking-at"                       |> Symbol.intern
let looking_at_p                     = "looking-at-p"                     |> Symbol.intern
let lookup_key                       = "lookup-key"                       |> Symbol.intern
let major_mode                       = "major-mode"                       |> Symbol.intern
let make_backup_files                = "make-backup-files"                |> Symbol.intern
let make_directory                   = "make-directory"                   |> Symbol.intern
let make_hash_table                  = "make-hash-table"                  |> Symbol.intern
let make_keymap                      = "make-keymap"                      |> Symbol.intern
let make_local_variable              = "make-local-variable"              |> Symbol.intern
let make_marker                      = "make-marker"                      |> Symbol.intern
let make_network_process             = "make-network-process"             |> Symbol.intern
let make_sparse_keymap               = "make-sparse-keymap"               |> Symbol.intern
let make_syntax_table                = "make-syntax-table"                |> Symbol.intern
let make_variable_buffer_local       = "make-variable-buffer-local"       |> Symbol.intern
let make_vector                      = "make-vector"                      |> Symbol.intern
let makunbound                       = "makunbound"                       |> Symbol.intern
let mapatoms                         = "mapatoms"                         |> Symbol.intern
let mark_active                      = "mark-active"                      |> Symbol.intern
let mark_marker                      = "mark-marker"                      |> Symbol.intern
let marker_buffer                    = "marker-buffer"                    |> Symbol.intern
let marker_insertion_type            = "marker-insertion-type"            |> Symbol.intern
let marker_position                  = "marker-position"                  |> Symbol.intern
let match_beginning                  = "match-beginning"                  |> Symbol.intern
let match_data                       = "match-data"                       |> Symbol.intern
let match_end                        = "match-end"                        |> Symbol.intern
let match_string                     = "match-string"                     |> Symbol.intern
let match_string_no_properties       = "match-string-no-properties"       |> Symbol.intern
let max_char                         = "max-char"                         |> Symbol.intern
let memq                             = "memq"                             |> Symbol.intern
let merge_face_attribute             = "merge-face-attribute"             |> Symbol.intern
let message                          = "message"                          |> Symbol.intern
let meta                             = "meta"                             |> Symbol.intern
let minibuffer_exit_hook             = "minibuffer-exit-hook"             |> Symbol.intern
let minibuffer_history               = "minibuffer-history"               |> Symbol.intern
let minibuffer_setup_hook            = "minibuffer-setup-hook"            |> Symbol.intern
let modify_syntax_entry              = "modify-syntax-entry"              |> Symbol.intern
let move_to_column                   = "move-to-column"                   |> Symbol.intern
let multibyte_string_p               = "multibyte-string-p"               |> Symbol.intern
let nil                              = "nil"                              |> Symbol.intern
let no_message                       = "no-message"                       |> Symbol.intern
let noconfirm                        = "noconfirm"                        |> Symbol.intern
let normal                           = "normal"                           |> Symbol.intern
let number                           = "number"                           |> Symbol.intern
let obarray                          = "obarray"                          |> Symbol.intern
let oblique                          = "oblique"                          |> Symbol.intern
let output                           = "output"                           |> Symbol.intern
let paragraph_separate               = "paragraph-separate"               |> Symbol.intern
let paragraph_start                  = "paragraph-start"                  |> Symbol.intern
let plist                            = "plist"                            |> Symbol.intern
let point                            = "point"                            |> Symbol.intern
let point_marker                     = "point-marker"                     |> Symbol.intern
let point_max                        = "point-max"                        |> Symbol.intern
let point_max_marker                 = "point-max-marker"                 |> Symbol.intern
let point_min                        = "point-min"                        |> Symbol.intern
let point_min_marker                 = "point-min-marker"                 |> Symbol.intern
let position_bytes                   = "position-bytes"                   |> Symbol.intern
let prefix_arg                       = "prefix-arg"                       |> Symbol.intern
let prefix_numeric_value             = "prefix-numeric-value"             |> Symbol.intern
let process                          = "process"                          |> Symbol.intern
let process_buffer                   = "process-buffer"                   |> Symbol.intern
let process_command                  = "process-command"                  |> Symbol.intern
let process_environment              = "process-environment"              |> Symbol.intern
let process_id                       = "process-id"                       |> Symbol.intern
let process_list                     = "process-list"                     |> Symbol.intern
let process_name                     = "process-name"                     |> Symbol.intern
let process_query_on_exit_flag       = "process-query-on-exit-flag"       |> Symbol.intern
let process_status                   = "process-status"                   |> Symbol.intern
let processp                         = "processp"                         |> Symbol.intern
let prog_mode                        = "prog-mode"                        |> Symbol.intern
let progn                            = "progn"                            |> Symbol.intern
let propertize                       = "propertize"                       |> Symbol.intern
let provide                          = "provide"                          |> Symbol.intern
let put_text_property                = "put-text-property"                |> Symbol.intern
let quote                            = "quote"                            |> Symbol.intern
let radio                            = "radio"                            |> Symbol.intern
let read                             = "read"                             |> Symbol.intern
let read_event                       = "read-event"                       |> Symbol.intern
let read_from_minibuffer             = "read-from-minibuffer"             |> Symbol.intern
let read_from_whole_string           = "read-from-whole-string"           |> Symbol.intern
let read_kbd_macro                   = "read-kbd-macro"                   |> Symbol.intern
let read_key_sequence_vector         = "read-key-sequence-vector"         |> Symbol.intern
let read_only_mode                   = "read-only-mode"                   |> Symbol.intern
let regexp                           = "regexp"                           |> Symbol.intern
let regexp_opt                       = "regexp-opt"                       |> Symbol.intern
let regexp_quote                     = "regexp-quote"                     |> Symbol.intern
let remap                            = "remap"                            |> Symbol.intern
let remove_hook                      = "remove-hook"                      |> Symbol.intern
let remove_list_of_text_properties   = "remove-list-of-text-properties"   |> Symbol.intern
let rename_buffer                    = "rename-buffer"                    |> Symbol.intern
let rename_file                      = "rename-file"                      |> Symbol.intern
let require                          = "require"                          |> Symbol.intern
let rest                             = "rest"                             |> Symbol.intern
let reverse_italic                   = "reverse-italic"                   |> Symbol.intern
let reverse_oblique                  = "reverse-oblique"                  |> Symbol.intern
let revert_buffer                    = "revert-buffer"                    |> Symbol.intern
let revert_buffer_function           = "revert-buffer-function"           |> Symbol.intern
let run_at_time                      = "run-at-time"                      |> Symbol.intern
let run_hooks                        = "run-hooks"                        |> Symbol.intern
let save_buffer                      = "save-buffer"                      |> Symbol.intern
let save_buffers_kill_emacs          = "save-buffers-kill-emacs"          |> Symbol.intern
let save_excursion                   = "save-excursion"                   |> Symbol.intern
let save_some_buffers                = "save-some-buffers"                |> Symbol.intern
let search_backward                  = "search-backward"                  |> Symbol.intern
let search_backward_regexp           = "search-backward-regexp"           |> Symbol.intern
let search_forward                   = "search-forward"                   |> Symbol.intern
let search_forward_regexp            = "search-forward-regexp"            |> Symbol.intern
let select_frame                     = "select-frame"                     |> Symbol.intern
let select_window                    = "select-window"                    |> Symbol.intern
let selected_frame                   = "selected-frame"                   |> Symbol.intern
let selected_window                  = "selected-window"                  |> Symbol.intern
let semi_bold                        = "semi-bold"                        |> Symbol.intern
let semi_condensed                   = "semi-condensed"                   |> Symbol.intern
let semi_expanded                    = "semi-expanded"                    |> Symbol.intern
let semi_light                       = "semi-light"                       |> Symbol.intern
let set                              = "set"                              |> Symbol.intern
let set_buffer                       = "set-buffer"                       |> Symbol.intern
let set_buffer_modified_p            = "set-buffer-modified-p"            |> Symbol.intern
let set_buffer_multibyte             = "set-buffer-multibyte"             |> Symbol.intern
let set_default                      = "set-default"                      |> Symbol.intern
let set_face_attribute               = "set-face-attribute"               |> Symbol.intern
let set_keymap_parent                = "set-keymap-parent"                |> Symbol.intern
let set_mark                         = "set-mark"                         |> Symbol.intern
let set_marker                       = "set-marker"                       |> Symbol.intern
let set_marker_insertion_type        = "set-marker-insertion-type"        |> Symbol.intern
let set_match_data                   = "set-match-data"                   |> Symbol.intern
let set_process_query_on_exit_flag   = "set-process-query-on-exit-flag"   |> Symbol.intern
let set_syntax_table                 = "set-syntax-table"                 |> Symbol.intern
let set_text_properties              = "set-text-properties"              |> Symbol.intern
let set_window_buffer                = "set-window-buffer"                |> Symbol.intern
let set_window_point                 = "set-window-point"                 |> Symbol.intern
let setenv                           = "setenv"                           |> Symbol.intern
let setq                             = "setq"                             |> Symbol.intern
let sexp                             = "sexp"                             |> Symbol.intern
let shift                            = "shift"                            |> Symbol.intern
let simple                           = "simple"                           |> Symbol.intern
let single_key_description           = "single-key-description"           |> Symbol.intern
let sit_for                          = "sit-for"                          |> Symbol.intern
let sleep_for                        = "sleep-for"                        |> Symbol.intern
let sort_lines                       = "sort-lines"                       |> Symbol.intern
let special_mode                     = "special-mode"                     |> Symbol.intern
let split_window_horizontally        = "split-window-horizontally"        |> Symbol.intern
let split_window_vertically          = "split-window-vertically"          |> Symbol.intern
let standard_syntax_table            = "standard-syntax-table"            |> Symbol.intern
let start                            = "start"                            |> Symbol.intern
let start_process                    = "start-process"                    |> Symbol.intern
let string                           = "string"                           |> Symbol.intern
let string_bytes                     = "string-bytes"                     |> Symbol.intern
let string_match                     = "string-match"                     |> Symbol.intern
let string_match_p                   = "string-match-p"                   |> Symbol.intern
let string_to_multibyte              = "string-to-multibyte"              |> Symbol.intern
let string_to_unibyte                = "string-to-unibyte"                |> Symbol.intern
let success                          = "success"                          |> Symbol.intern
let super                            = "super"                            |> Symbol.intern
let suppress_keymap                  = "suppress-keymap"                  |> Symbol.intern
let switch_to_buffer                 = "switch-to-buffer"                 |> Symbol.intern
let symbol                           = "symbol"                           |> Symbol.intern
let symbol_file                      = "symbol-file"                      |> Symbol.intern
let symbol_name                      = "symbol-name"                      |> Symbol.intern
let symbol_value                     = "symbol-value"                     |> Symbol.intern
let syntax_table                     = "syntax-table"                     |> Symbol.intern
let system_groups                    = "system-groups"                    |> Symbol.intern
let system_users                     = "system-users"                     |> Symbol.intern
let t                                = "t"                                |> Symbol.intern
let text_mode                        = "text-mode"                        |> Symbol.intern
let text_properties_at               = "text-properties-at"               |> Symbol.intern
let text_property_not_all            = "text-property-not-all"            |> Symbol.intern
let thingatpt                        = "thingatpt"                        |> Symbol.intern
let timer_list                       = "timer-list"                       |> Symbol.intern
let transient_mark_mode              = "transient-mark-mode"              |> Symbol.intern
let triple                           = "triple"                           |> Symbol.intern
let ultra_bold                       = "ultra-bold"                       |> Symbol.intern
let ultra_condensed                  = "ultra-condensed"                  |> Symbol.intern
let ultra_expanded                   = "ultra-expanded"                   |> Symbol.intern
let ultra_light                      = "ultra-light"                      |> Symbol.intern
let undefined                        = "undefined"                        |> Symbol.intern
let underline                        = "underline"                        |> Symbol.intern
let undo                             = "undo"                             |> Symbol.intern
let undo_boundary                    = "undo-boundary"                    |> Symbol.intern
let unread_command_events            = "unread-command-events"            |> Symbol.intern
let unspecified                      = "unspecified"                      |> Symbol.intern
let use_global_map                   = "use-global-map"                   |> Symbol.intern
let use_local_map                    = "use-local-map"                    |> Symbol.intern
let user_full_name                   = "user-full-name"                   |> Symbol.intern
let user_login_name                  = "user-login-name"                  |> Symbol.intern
let user_real_login_name             = "user-real-login-name"             |> Symbol.intern
let user_real_uid                    = "user-real-uid"                    |> Symbol.intern
let user_uid                         = "user-uid"                         |> Symbol.intern
let variable                         = "variable"                         |> Symbol.intern
let vconcat                          = "vconcat"                          |> Symbol.intern
let vector                           = "vector"                           |> Symbol.intern
let view_file                        = "view-file"                        |> Symbol.intern
let view_mode                        = "view-mode"                        |> Symbol.intern
let visible_frame_list               = "visible-frame-list"               |> Symbol.intern
let visual_line_mode                 = "visual-line-mode"                 |> Symbol.intern
let warning                          = "warning"                          |> Symbol.intern
let window_body_height               = "window-body-height"               |> Symbol.intern
let window_buffer                    = "window-buffer"                    |> Symbol.intern
let window_height                    = "window-height"                    |> Symbol.intern
let window_list                      = "window-list"                      |> Symbol.intern
let window_live_p                    = "window-live-p"                    |> Symbol.intern
let window_point                     = "window-point"                     |> Symbol.intern
let window_width                     = "window-width"                     |> Symbol.intern
let with_current_buffer              = "with-current-buffer"              |> Symbol.intern
let write_region                     = "write-region"                     |> Symbol.intern
let y_or_n_p                         = "y-or-n-p"                         |> Symbol.intern
let y_or_n_p_with_timeout            = "y-or-n-p-with-timeout"            |> Symbol.intern
let yes_or_no_p                      = "yes-or-no-p"                      |> Symbol.intern

(** [A] is short for "ampersand".  [A] defines symbols starting with [&]. *)
module A = struct
  let optional = "&optional" |> Symbol.intern
  let rest     = "&rest"     |> Symbol.intern
end

(** [K] is short for "keyword".  [K] defines a symbols starting with ":". *)
module K = struct
  let background     = ":background"     |> Symbol.intern
  let box            = ":box"            |> Symbol.intern
  let family         = ":family"         |> Symbol.intern
  let file           = ":file"           |> Symbol.intern
  let filter         = ":filter"         |> Symbol.intern
  let font           = ":font"           |> Symbol.intern
  let foreground     = ":foreground"     |> Symbol.intern
  let foundry        = ":foundry"        |> Symbol.intern
  let group          = ":group"          |> Symbol.intern
  let height         = ":height"         |> Symbol.intern
  let inherit_       = ":inherit"        |> Symbol.intern
  let inverse_video  = ":inverse-video"  |> Symbol.intern
  let must_match     = ":must-match"     |> Symbol.intern
  let name           = ":name"           |> Symbol.intern
  let overline       = ":overline"       |> Symbol.intern
  let server         = ":server"         |> Symbol.intern
  let service        = ":service"        |> Symbol.intern
  let slant          = ":slant"          |> Symbol.intern
  let stipple        = ":stipple"        |> Symbol.intern
  let strike_through = ":strike-through" |> Symbol.intern
  let type_          = ":type"           |> Symbol.intern
  let underline      = ":underline"      |> Symbol.intern
  let weight         = ":weight"         |> Symbol.intern
  let width          = ":width"          |> Symbol.intern
end
